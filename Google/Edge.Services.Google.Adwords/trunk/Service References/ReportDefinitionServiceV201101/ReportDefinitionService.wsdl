<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="https://adwords.google.com/api/adwords/cm/v201101" targetNamespace="https://adwords.google.com/api/adwords/cm/v201101" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" elementFormDefault="qualified" targetNamespace="https://adwords.google.com/api/adwords/cm/v201101" jaxb:version="1.0">
      <xsd:annotation>
        <xsd:appinfo>
          <jaxb:globalBindings typesafeEnumMaxMembers="999999" />
        </xsd:appinfo>
      </xsd:annotation>
      <xsd:complexType name="AuthenticationError">
        <xsd:annotation>
          <xsd:documentation>
            Errors returned when Authentication failed.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:AuthenticationError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="AuthorizationError">
        <xsd:annotation>
          <xsd:documentation>
            Errors that are thrown due to an authorization problem.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:AuthorizationError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ClientTermsError">
        <xsd:annotation>
          <xsd:documentation>
            Encapsulates the errors thrown during client terms checks for adwords.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:ClientTermsError.Reason" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="CollectionSizeError">
        <xsd:annotation>
          <xsd:documentation>
            A list of all errors associated with the @ContentsSize constraint.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:CollectionSizeError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DateError">
        <xsd:annotation>
          <xsd:documentation>
            Errors associated with invalid dates and date ranges.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:DateError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DateRange">
        <xsd:annotation>
          <xsd:documentation>
            Represents a range of dates that has either an upper or a lower bound.
            The format for the date is YYYYMMDD.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="min" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                the lower bound of this date range, inclusive.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="max" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                the upper bound of this date range, inclusive.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DistinctError">
        <xsd:annotation>
          <xsd:documentation>
            Errors related to distinct ids or content.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:DistinctError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="EnumValuePair">
        <xsd:annotation>
          <xsd:documentation>
            Represents information about enum values.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="enumValue" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The api enum value.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="enumDisplayValue" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The enum value displayed in the downloaded report.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="InternalApiError">
        <xsd:annotation>
          <xsd:documentation>
            Indicates that a server-side error has occured. {@code InternalApiError}s
            are generally not the result of an invalid request or message sent by the
            client.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:InternalApiError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NotEmptyError">
        <xsd:annotation>
          <xsd:documentation>
            A list of all errors associated with the @NotEmpty constraints.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:NotEmptyError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NotWhitelistedError">
        <xsd:annotation>
          <xsd:documentation>
            Indicates that the customer is not whitelisted for accessing the API.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:NotWhitelistedError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="NullError">
        <xsd:annotation>
          <xsd:documentation>
            Errors associated with contents not null constraint.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:NullError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="OperatorError">
        <xsd:annotation>
          <xsd:documentation>
            A list of all errors associated with the @SupportedOperators constraints.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:OperatorError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="OrderBy">
        <xsd:annotation>
          <xsd:documentation>
            Specifies how the resulting information should be sorted.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="field" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The field to sort the results on.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="sortOrder" type="tns:SortOrder">
            <xsd:annotation>
              <xsd:documentation>
                The order to sort the results on. The default sort order is {@link SortOrder#ASCENDING}.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Paging">
        <xsd:annotation>
          <xsd:documentation>
            Specifies the page of results to return in the response. A page is specified
            by the result position to start at and the maximum number of results to
            return.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="startIndex" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Index of the first result to return in this page.
                &lt;span class="constraint InRange"&gt;This field must be greater than or equal to 0.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="numberResults" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Maximum number of results to return in this page.
                &lt;span class="constraint InRange"&gt;This field must be greater than or equal to 0.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Predicate">
        <xsd:annotation>
          <xsd:documentation>
            Specifies how an entity (eg. adgroup, campaign, criterion, ad) should be filtered.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="field" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The field by which to filter the returned data. Possible values are marked Filterable on
                the entity's reference page. For example, for predicates for the
                CampaignService {@link Selector selector}, refer to the filterable fields from the
                {@link Campaign} reference page.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="operator" type="tns:Predicate.Operator">
            <xsd:annotation>
              <xsd:documentation>
                The operator to use for filtering the data returned.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="values" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The values by which to filter the field. The {@link Operator#IN} and {@link
                Operator#NOT_IN} take multiple values. All others take a single value.
                &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="QuotaCheckError">
        <xsd:annotation>
          <xsd:documentation>
            Encapsulates the errors thrown during developer quota checks.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:QuotaCheckError.Reason" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RangeError">
        <xsd:annotation>
          <xsd:documentation>
            A list of all errors associated with the Range constraint.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:RangeError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RateExceededError">
        <xsd:annotation>
          <xsd:documentation>
            Signals that a call failed because a measured rate exceeded.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:RateExceededError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="rateName" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    Cause of the rate exceeded error.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="rateScope" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>
                    The scope of the rate (ACCOUNT/DEVELOPER).
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="1" name="retryAfterSeconds" type="xsd:int">
                <xsd:annotation>
                  <xsd:documentation>
                    The amount of time (in seconds) the client should wait before retrying the request.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ReadOnlyError">
        <xsd:annotation>
          <xsd:documentation>
            A list of all errors associated with the @ReadOnly constraint.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:ReadOnlyError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ReportDefinitionError">
        <xsd:annotation>
          <xsd:documentation>
            Encapsulates the errors that can be thrown during {@link ReportDefinition}
            mutate operation.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:ReportDefinitionError.Reason" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ReportDefinitionField">
        <xsd:annotation>
          <xsd:documentation>
            Represents the fields that can be used to create a ReportDefinition.
            This class allows the user to query the list of fields applicable to a
            given report type. Consumers of reports will be able use the retrieved
            fields through the {@link ReportDefinitionService#getReportFields}
            api and run the corresponding reports.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="fieldName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The field name.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="displayFieldName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The name that is displayed in the downloaded report.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="xmlAttributeName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The XML attribute in the downloaded report.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="fieldType" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The type of field. Useful for knowing what operation type to pass in for
                a given field in a predicate.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="enumValues" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                List of enum values for the corresponing field iff the field is an enum
                type.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="canSelect" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                Indicates if the user can select this field.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="canFilter" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                Indicates if the user can filter on this field.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="enumValuePairs" type="tns:EnumValuePair">
            <xsd:annotation>
              <xsd:documentation>
                List of enum values in api to their corresponding display values in the
                downloaded reports.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="RequestError">
        <xsd:annotation>
          <xsd:documentation>
            Encapsulates the generic errors thrown when there's an error with user
            request.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:RequestError.Reason" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="RequiredError">
        <xsd:annotation>
          <xsd:documentation>
            Errors due to missing required field.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:RequiredError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SelectorError">
        <xsd:annotation>
          <xsd:documentation>
            Represents possible error codes for {@link Selector}.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:SelectorError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SizeLimitError">
        <xsd:annotation>
          <xsd:documentation>
            Indicates that the number of entries in the request or response exceeds the system limit.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:SizeLimitError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="SoapHeader">
        <xsd:annotation>
          <xsd:documentation>
            Defines the required and optional elements within the header of a SOAP request.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="authToken" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Authentication token from Google ClientLogin API. Developers need to authenticate themselves
                with that API before they can send a request to AdWords API. This header identifies either the
                MCC manager acting on behalf of their client, or the advertiser managing their own account.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="clientCustomerId" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Optional header: the customer id of the client of the MCC manager. Applicable only
                if an MCC manager, as identified by authToken, is acting on behalf of their client.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="clientEmail" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Optional header: the login email of a client of the MCC manager. Applicable only
                if an MCC manager, as identified by authToken, is acting on behalf of their client.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="developerToken" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Developer token to identify that the person making the call has enough
                quota.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="userAgent" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                UserAgent is used to track distribution of API client programs and
                application usage. The client is responsible for putting in a meaningful
                value for tracking purposes. To be clear this is not the same as an HTTP
                user agent.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="validateOnly" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                Used to validate the request without executing it.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="partialFailure" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                If true, API will try to commit as many error free operations as possible and
                report the other operations' errors.
                
                &lt;p&gt;Ignored for non-mutate calls.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SoapResponseHeader">
        <xsd:annotation>
          <xsd:documentation>
            Defines the elements within the header of a SOAP response.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="requestId" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Unique id that identifies this request. If developers have any support issues, sending us
                this id will enable us to find their request more easily.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="operations" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Number of operations performed for this SOAP request.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="responseTime" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Elapsed time in milliseconds between the AdWords API receiving the request and sending the
                response.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="units" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                Total number of API units the SOAP request used.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ClientSelector">
        <xsd:annotation>
          <xsd:documentation>
            A filter to select specific clients and campaigns that are managed by an MCC.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="login" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The contact email address of the client. This value must be specified
                within this {@link ClientSelector} to specify the target client for
                selection.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="predicates" type="tns:Predicate">
            <xsd:annotation>
              <xsd:documentation>
                Additional predicates to select campaigns associated with the specified
                client. This predicate should be of the form:
                &lt;pre&gt; CampaignId IN &amp;lt;list-of-campaign-IDs&amp;gt;&lt;/pre&gt;
                &lt;span class="constraint ContentsDistinct"&gt;This field must contain distinct elements.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="DatabaseError">
        <xsd:annotation>
          <xsd:documentation>
            Errors that are thrown due to a database access problem.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApiError">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="reason" type="tns:DatabaseError.Reason">
                <xsd:annotation>
                  <xsd:documentation>
                    The error reason represented by an enum.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="Selector">
        <xsd:annotation>
          <xsd:documentation>
            A generic selector to specify the type of information to return.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="fields" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                List of fields to select. Possible values are marked Selectable on the
                entity's reference page. For example, for the CampaignService selector, refer
                to the selectable fields from the {@link Campaign} reference page.
                &lt;span class="constraint ContentsDistinct"&gt;This field must contain distinct elements.&lt;/span&gt;
                &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="predicates" type="tns:Predicate">
            <xsd:annotation>
              <xsd:documentation>
                Specifies how an entity (eg. adgroup, campaign, criterion, ad) should be filtered.
                &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="dateRange" type="tns:DateRange">
            <xsd:annotation>
              <xsd:documentation>
                Range of dates for which you want to include data. If this value is omitted,
                results for all dates are returned.
                &lt;span class="constraint DateRangeWithinRange"&gt;This range must be contained within the range [19700101, 20380101].&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ordering" type="tns:OrderBy">
            <xsd:annotation>
              <xsd:documentation>
                The fields on which you want to sort, and the sort order. The order in the list is
                significant: The first element in the list indicates the primary sort order, the next
                specifies the secondary sort order and so on.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="paging" type="tns:Paging">
            <xsd:annotation>
              <xsd:documentation>
                Pagination information.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ApiError" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            The API error base class that provides details about an error that occurred
            while processing a service request.
            
            &lt;p&gt;The OGNL field path is provided for parsers to identify the request data
            element that may have caused the error.&lt;/p&gt;
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="fieldPath" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The OGNL field path to identify cause of error.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="trigger" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The data that caused the error.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="errorString" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                A simple string representation of the error and reason.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="ApiError.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of ApiError of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ApiException">
        <xsd:annotation>
          <xsd:documentation>
            Exception class for holding a list of service errors.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:ApplicationException">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="errors" type="tns:ApiError">
                <xsd:annotation>
                  <xsd:documentation>
                    List of errors.
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ApplicationException">
        <xsd:annotation>
          <xsd:documentation>
            Base class for exceptions.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="message" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Error message.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="ApplicationException.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of ApplicationException of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ReportDefinitionSelector">
        <xsd:annotation>
          <xsd:documentation>
            A selector used to specify which report definitions should be returned.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="definitionIds" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                The list of report definition ids to be selected. If this list is not set,
                a call to {@link ReportDefinitionService#get(ReportDefinitionSelector)}
                will return the most recent report definitions up to a certain limit.
                &lt;span class="constraint ContentsDistinct"&gt;This field must contain distinct elements.&lt;/span&gt;
                &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="paging" type="tns:Paging" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ReportDefinition">
        <xsd:annotation>
          <xsd:documentation>
            Represents a report definition.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>
                ID of this report definition.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set for following {@link Operator}s : ADD.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null} when it is contained within {@link Operator}s : SET, REMOVE.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="selector" type="tns:Selector">
            <xsd:annotation>
              <xsd:documentation>
                Defines the report fields and the filters for this report definition.
                This field is required when creating a new report definition.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="reportName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Name of the report definition.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null} when it is contained within {@link Operator}s : ADD.&lt;/span&gt;
                &lt;span class="constraint StringLength"&gt;This string must not be empty.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="reportType" type="tns:ReportDefinition.ReportType">
            <xsd:annotation>
              <xsd:documentation>
                Type of the report.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null} when it is contained within {@link Operator}s : ADD.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="hasAttachment" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                Flag to indicate whether report will be sent as email attachment.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="dateRangeType" type="tns:ReportDefinition.DateRangeType">
            <xsd:annotation>
              <xsd:documentation>
                Date range for running report.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null} when it is contained within {@link Operator}s : ADD.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="downloadFormat" type="tns:DownloadFormat">
            <xsd:annotation>
              <xsd:documentation>
                Download format of report contents.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null} when it is contained within {@link Operator}s : ADD.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="creationTime" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                Creation time of ReportDefinition.
                &lt;span class="constraint ReadOnly"&gt;This field is read only and should not be set.  If this field is sent to the API, it will be ignored.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="crossClient" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>
                Indicates whether the associated report is across more than one client
                (i.e. MCC reports).  If this value is false, then {@link #clientSelectors}
                will be ignored.  If this value is true and {@link #clientSelectors} is
                null or empty, then all clients managed by the customer associated with the
                report will be queried.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="clientSelectors" type="tns:ClientSelector">
            <xsd:annotation>
              <xsd:documentation>
                Provides a way for report clients to selectively query a list of customers
                managed by an MCC. This field is only applicable iff {@link #crossClient}
                is set to true.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ReportDefinitionOperation">
        <xsd:annotation>
          <xsd:documentation>
            Operations for adding/updating/removing report definitions.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:Operation">
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="1" name="operand" type="tns:ReportDefinition">
                <xsd:annotation>
                  <xsd:documentation>
                    ReportDefinition to operate on
                    &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ReportDefinitionPage">
        <xsd:annotation>
          <xsd:documentation>
            Contains a subset of report definitions resulting from the filtering and
            paging of the {@link ReportDefinitionService#get} call.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="entries" type="tns:ReportDefinition">
            <xsd:annotation>
              <xsd:documentation>
                The result entries in this page.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="totalNumEntries" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>
                Total number of entries in the result that this page is a part of.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Operation" abstract="true">
        <xsd:annotation>
          <xsd:documentation>
            This represents an operation that includes an operator and an operand
            specified type.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="operator" type="tns:Operator">
            <xsd:annotation>
              <xsd:documentation>
                Operator.
                &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="1" name="Operation.Type" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                This field indicates the subtype of Operation of this instance.  It is ignored
                on input, and instead xsi:type should be specified.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="AuthenticationError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The single reason for the authentication failure.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="AUTHENTICATION_FAILED">
            <xsd:annotation>
              <xsd:documentation>
                Authentication of the request failed.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CLIENT_CUSTOMER_ID_IS_REQUIRED">
            <xsd:annotation>
              <xsd:documentation>
                Client Customer Id is required if CustomerIdMode is set to CLIENT_EXTERNAL_CUSTOMER_ID.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CLIENT_EMAIL_REQUIRED">
            <xsd:annotation>
              <xsd:documentation>
                Client Email is required if CustomerIdMode is set to CLIENT_EXTERNAL_EMAIL_FIELD.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CLIENT_CUSTOMER_ID_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Client customer Id is not a number.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CLIENT_EMAIL_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Client customer Id is not a number.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CLIENT_EMAIL_FAILED_TO_AUTHENTICATE">
            <xsd:annotation>
              <xsd:documentation>
                Client email is not a valid customer email.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CUSTOMER_NOT_FOUND">
            <xsd:annotation>
              <xsd:documentation>
                No customer found for the customer id provided in the header.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GOOGLE_ACCOUNT_DELETED">
            <xsd:annotation>
              <xsd:documentation>
                Client's Google Account is deleted.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GOOGLE_ACCOUNT_COOKIE_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Google account login token in the cookie is invalid.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FAILED_TO_AUTHENTICATE_GOOGLE_ACCOUNT">
            <xsd:annotation>
              <xsd:documentation>
                problem occurred during Google account authentication.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GOOGLE_ACCOUNT_USER_AND_ADS_USER_MISMATCH">
            <xsd:annotation>
              <xsd:documentation>
                The user in the google account login token does not match the UserId in the cookie.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LOGIN_COOKIE_REQUIRED">
            <xsd:annotation>
              <xsd:documentation>
                Login cookie is required for authentication.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NOT_ADS_USER">
            <xsd:annotation>
              <xsd:documentation>
                User in the cookie is not a valid Ads user.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OAUTH_TOKEN_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Oauth token in the header is not valid.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OAUTH_TOKEN_EXPIRED">
            <xsd:annotation>
              <xsd:documentation>
                Oauth token in the header has expired.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OAUTH_TOKEN_DISABLED">
            <xsd:annotation>
              <xsd:documentation>
                Oauth token in the header has been disabled.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OAUTH_TOKEN_REVOKED">
            <xsd:annotation>
              <xsd:documentation>
                Oauth token in the header has been revoked.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OAUTH_TOKEN_HEADER_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Oauth token HTTP header is malformed.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LOGIN_COOKIE_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                Login cookie is not valid.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FAILED_TO_RETRIEVE_LOGIN_COOKIE">
            <xsd:annotation>
              <xsd:documentation>
                Failed to decrypt the login cookie.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="USER_ID_INVALID">
            <xsd:annotation>
              <xsd:documentation>
                User Id in the header is not a valid id.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="AuthorizationError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the database error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="UNABLE_TO_AUTHORIZE">
            <xsd:annotation>
              <xsd:documentation>
                Could not complete authorization due to an internal problem.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NO_ADWORDS_ACCOUNT_FOR_CUSTOMER">
            <xsd:annotation>
              <xsd:documentation>
                Customer has no AdWords account.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="USER_PERMISSION_DENIED">
            <xsd:annotation>
              <xsd:documentation>
                User doesn't have permission to access customer.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="EFFECTIVE_USER_PERMISSION_DENIED">
            <xsd:annotation>
              <xsd:documentation>
                Effective user doesn't have permission to access this customer.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="USER_HAS_READONLY_PERMISSION">
            <xsd:annotation>
              <xsd:documentation>
                User has read-only permission cannot mutate.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NO_CUSTOMER_FOUND">
            <xsd:annotation>
              <xsd:documentation>
                No customer found.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ClientTermsError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            Enums for the various reasons an error can be thrown as a result of
            ClientTerms violation.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="INCOMPLETE_SIGNUP_CURRENT_ADWORDS_TNC_NOT_AGREED">
            <xsd:annotation>
              <xsd:documentation>
                Customer has not agreed to the latest adwords t&amp;c
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CollectionSizeError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="TOO_FEW" />
          <xsd:enumeration value="TOO_MANY" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DatabaseError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the database error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="CONCURRENT_MODIFICATION">
            <xsd:annotation>
              <xsd:documentation>
                A concurrency problem occurred as two threads were attempting to modify same object.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="PERMISSION_DENIED">
            <xsd:annotation>
              <xsd:documentation>
                The permission was denied to access an object.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CAMPAIGN_PRODUCT_NOT_SUPPORTED">
            <xsd:annotation>
              <xsd:documentation>
                Requested campaign belongs to a product that is not supported by the api.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DUPLICATE_KEY">
            <xsd:annotation>
              <xsd:documentation>
                a duplicate key was detected upon insertion
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DATABASE_ERROR">
            <xsd:annotation>
              <xsd:documentation>
                a database error has occurred
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNKNOWN">
            <xsd:annotation>
              <xsd:documentation>
                an unknown error has occurred
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DateError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="INVALID_FIELD_VALUES_IN_DATE">
            <xsd:annotation>
              <xsd:documentation>
                Given field values do not correspond to a valid date.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_STRING_DATE">
            <xsd:annotation>
              <xsd:documentation>
                The string date's format should be yyyymmdd.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_STRING_DATE_RANGE">
            <xsd:annotation>
              <xsd:documentation>
                The string date range's format should be yyyymmdd yyyymmdd.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_STRING_DATE_TIME">
            <xsd:annotation>
              <xsd:documentation>
                The string date time's format should be yyyymmdd hhmmss [tz].
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="EARLIER_THAN_MINIMUM_DATE">
            <xsd:annotation>
              <xsd:documentation>
                Date is before allowed minimum.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LATER_THAN_MAXIMUM_DATE">
            <xsd:annotation>
              <xsd:documentation>
                Date is after allowed maximum.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DATE_RANGE_MINIMUM_DATE_LATER_THAN_MAXIMUM_DATE">
            <xsd:annotation>
              <xsd:documentation>
                Date range bounds are not in order.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DATE_RANGE_MINIMUM_AND_MAXIMUM_DATES_BOTH_NULL">
            <xsd:annotation>
              <xsd:documentation>
                Both dates in range are null.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DistinctError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the validation error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DUPLICATE_ELEMENT" />
          <xsd:enumeration value="DUPLICATE_TYPE" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="DownloadFormat">
        <xsd:annotation>
          <xsd:documentation>
            Enum class that describes the supported formats for content downloads.
            The order mimics the order in which download options are presented in the
            legacy report center.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="CSVFOREXCEL">
            <xsd:annotation>
              <xsd:documentation>
                The format for Excel.  This uses a format of unicode which is prepended
                with a BOM (byte order marker) to signal to Excel that it is unicode.
                Excel defaults to use tab as a separator when unicode is being used.  If
                comma is used then Excel will put all of the data in each row into a single
                column (by default).
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CSV">
            <xsd:annotation>
              <xsd:documentation>
                The csv(comma separated) output format.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="TSV">
            <xsd:annotation>
              <xsd:documentation>
                The tab separated value(tsv) output format.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="XML">
            <xsd:annotation>
              <xsd:documentation>
                The xml output format.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GZIPPED_CSV">
            <xsd:annotation>
              <xsd:documentation>
                The gzip compressed csv(comma separated value) output format.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GZIPPED_XML">
            <xsd:annotation>
              <xsd:documentation>
                The gzip compressed xml output format.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="InternalApiError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The single reason for the internal API error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="UNEXPECTED_INTERNAL_API_ERROR">
            <xsd:annotation>
              <xsd:documentation>
                API encountered an unexpected internal error.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNKNOWN">
            <xsd:annotation>
              <xsd:documentation>
                The cause of the error is not known or only defined in newer versions.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NotEmptyError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the validation error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="EMPTY_LIST" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NotWhitelistedError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The single reason for the whitelist error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="CUSTOMER_NOT_WHITELISTED_FOR_API">
            <xsd:annotation>
              <xsd:documentation>
                Customer is not whitelisted for accessing the API.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="NullError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the validation error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NULL_CONTENT">
            <xsd:annotation>
              <xsd:documentation>
                Specified list/container must not contain any null elements
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Operator">
        <xsd:annotation>
          <xsd:documentation>
            This represents an operator that may be presented to an adsapi service.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ADD">
            <xsd:annotation>
              <xsd:documentation>
                The ADD operator.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="REMOVE">
            <xsd:annotation>
              <xsd:documentation>
                The REMOVE operator.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="SET">
            <xsd:annotation>
              <xsd:documentation>
                The SET operator (used for updates).
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="OperatorError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the validation error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="OPERATOR_NOT_SUPPORTED" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="Predicate.Operator">
        <xsd:annotation>
          <xsd:documentation>
            Defines the valid set of operators.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="EQUALS" />
          <xsd:enumeration value="NOT_EQUALS" />
          <xsd:enumeration value="IN" />
          <xsd:enumeration value="NOT_IN" />
          <xsd:enumeration value="GREATER_THAN" />
          <xsd:enumeration value="GREATER_THAN_EQUALS" />
          <xsd:enumeration value="LESS_THAN" />
          <xsd:enumeration value="LESS_THAN_EQUALS" />
          <xsd:enumeration value="STARTS_WITH" />
          <xsd:enumeration value="STARTS_WITH_IGNORE_CASE" />
          <xsd:enumeration value="CONTAINS" />
          <xsd:enumeration value="CONTAINS_IGNORE_CASE" />
          <xsd:enumeration value="DOES_NOT_CONTAIN" />
          <xsd:enumeration value="DOES_NOT_CONTAIN_IGNORE_CASE" />
          <xsd:enumeration value="UNKNOWN">
            <xsd:annotation>
              <xsd:documentation>
                &lt;span class="constraint Rejected"&gt;Used for return value only. An enumeration could not be processed, typically due to incompatibility with your WSDL version.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="QuotaCheckError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            Enums for all the reasons an error can be thrown to the user during
            billing quota checks.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="INVALID_TOKEN_HEADER">
            <xsd:annotation>
              <xsd:documentation>
                Customer passed in an invalid token in the header.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ACCOUNT_DELINQUENT">
            <xsd:annotation>
              <xsd:documentation>
                Customer is marked delinquent.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ACCOUNT_INACCESSIBLE">
            <xsd:annotation>
              <xsd:documentation>
                Customer is a fraudulent.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ACCOUNT_INACTIVE">
            <xsd:annotation>
              <xsd:documentation>
                Inactive Account.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP">
            <xsd:annotation>
              <xsd:documentation>
                Signup not complete
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_LATEST_ADWORDS_API_TNC_NOT_AGREED">
            <xsd:annotation>
              <xsd:documentation>
                Latest AdWords API T&amp;C not agreed.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_NO_BILLING_INFO">
            <xsd:annotation>
              <xsd:documentation>
                No Billing Info.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_USER_INFO_MISSING">
            <xsd:annotation>
              <xsd:documentation>
                User Info missing.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_USER_INFO_PENDING">
            <xsd:annotation>
              <xsd:documentation>
                User Info pending.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INCOMPLETE_SIGNUP_USER_INFO_REJECTED">
            <xsd:annotation>
              <xsd:documentation>
                User Info rejected.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MONTHLY_BUDGET_REACHED">
            <xsd:annotation>
              <xsd:documentation>
                Monthly budget quota reached.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="QUOTA_EXCEEDED">
            <xsd:annotation>
              <xsd:documentation>
                Monthly budget quota exceeded.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="RangeError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="TOO_LOW" />
          <xsd:enumeration value="TOO_HIGH" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="RateExceededError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reason for the rate exceeded error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="RATE_EXCEEDED">
            <xsd:annotation>
              <xsd:documentation>
                Rate exceeded.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ReadOnlyError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="READ_ONLY" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ReportDefinition.DateRangeType">
        <xsd:annotation>
          <xsd:documentation>
            Enums for date range of report.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="TODAY">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for today only.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="YESTERDAY">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for yesterday only.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LAST_7_DAYS">
            <xsd:annotation>
              <xsd:documentation>
                Report are generated for the last 7 days not including today.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="THIS_WEEK_SUN_TODAY">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for the period between the previous Sunday
                and the current day.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="THIS_WEEK_MON_TODAY">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for the period between the previous Monday
                and the current day.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LAST_WEEK">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for the seven-day period starting with
                previous Monday.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LAST_14_DAYS">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for the last 14 days not including today.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LAST_30_DAYS">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for the last 30 days not including today.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LAST_BUSINESS_WEEK">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for the 5 day business week starting with previous
                Monday.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LAST_WEEK_SUN_SAT">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for the seven-day period starting with
                previous Sunday.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="THIS_MONTH">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for all days in the current month.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LAST_MONTH">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for all days in the previous month.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ALL_TIME">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for all available time range.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CUSTOM_DATE">
            <xsd:annotation>
              <xsd:documentation>
                Reports are generated for the date range specified by
                {@link Selector#dateRange}.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ReportDefinition.ReportType">
        <xsd:annotation>
          <xsd:documentation>
            Enums for report types.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="KEYWORDS_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for your keywords.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AD_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for your ads.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="URL_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for URLs which triggered your ad and
                received clicks.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ADGROUP_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports ad group performance data for one or more of your campaigns.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CAMPAIGN_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for your campaigns.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ACCOUNT_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for your entire account.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DEMOGRAPHIC_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for sites by demographic.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GEO_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data by geographic origin.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="SEARCH_QUERY_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for search queries which triggered your ad and
                received clicks.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MANAGED_PLACEMENTS_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for your managed placements on the content network.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AUTOMATIC_PLACEMENTS_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for automatic placements on the content network.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CAMPAIGN_NEGATIVE_KEYWORDS_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for negative keywords at the campaign level.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CAMPAIGN_NEGATIVE_PLACEMENTS_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for the negative placements at the campaign
                level.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AD_EXTENSIONS_PERFORMANCE_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Report performance data for ad extensions.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DESTINATION_URL_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for destination urls.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CREATIVE_CONVERSION_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Reports performance data for creative conversions (e.g. free clicks).
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNKNOWN">
            <xsd:annotation>
              <xsd:documentation>
                &lt;span class="constraint Rejected"&gt;Used for return value only. An enumeration could not be processed, typically due to incompatibility with your WSDL version.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ReportDefinitionError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            Enums for all the reasons an error can be thrown to the user during
            a {@link ReportDefinitionService#mutate(java.util.List)} operation.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="INVALID_FIELD_NAME_FOR_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Customer passed in invalid field name for a report type
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNABLE_TO_FIND_MAPPING_FOR_THIS_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Unable to locate a field mapping for this report type.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_COLUMN_NAME_FOR_REPORT">
            <xsd:annotation>
              <xsd:documentation>
                Customer passed in invalid column name for a report type
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_REPORT_DEFINITION_ID">
            <xsd:annotation>
              <xsd:documentation>
                Customer passed in invalid report definition id.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="REPORT_SELECTOR_CANNOT_BE_NULL">
            <xsd:annotation>
              <xsd:documentation>
                Report selector cannot be null.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NO_ENUMS_FOR_THIS_COLUMN_NAME">
            <xsd:annotation>
              <xsd:documentation>
                No Enums exist for this column name.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_VIEW">
            <xsd:annotation>
              <xsd:documentation>
                Invalid view name.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="SORTING_NOT_SUPPORTED">
            <xsd:annotation>
              <xsd:documentation>
                Sorting is not supported for reports.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="PAGING_NOT_SUPPORTED">
            <xsd:annotation>
              <xsd:documentation>
                Paging is not supported for reports.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="CUSTOMER_SERVING_TYPE_REPORT_MISMATCH">
            <xsd:annotation>
              <xsd:documentation>
                Customer can not create report of a selected type.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="RequestError.Reason">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="UNKNOWN">
            <xsd:annotation>
              <xsd:documentation>
                Error reason is unknown.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_INPUT">
            <xsd:annotation>
              <xsd:documentation>
                Invalid input.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="RequiredError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="REQUIRED">
            <xsd:annotation>
              <xsd:documentation>
                Missing required field.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SelectorError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for the target error.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="INVALID_FIELD_NAME">
            <xsd:annotation>
              <xsd:documentation>
                The field name is not valid.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_FIELDS">
            <xsd:annotation>
              <xsd:documentation>
                The list of fields is null or empty.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="OPERATOR_DOES_NOT_SUPPORT_MULTIPLE_VALUES">
            <xsd:annotation>
              <xsd:documentation>
                Predicate operator does not support multiple values. Multiple values are
                supported only for {@link Predicate.Operator#IN} and {@link Predicate.Operator#NOT_IN}.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_PREDICATE_ENUM_VALUE">
            <xsd:annotation>
              <xsd:documentation>
                The predicate enum value is not valid.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_PREDICATE_OPERATOR">
            <xsd:annotation>
              <xsd:documentation>
                The predicate operator is empty.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MISSING_PREDICATE_VALUES">
            <xsd:annotation>
              <xsd:documentation>
                The predicate values are empty.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_PREDICATE_FIELD_NAME">
            <xsd:annotation>
              <xsd:documentation>
                The predicate field name is not valid.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_PREDICATE_OPERATOR">
            <xsd:annotation>
              <xsd:documentation>
                The predicate operator is not valid.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_FIELD_SELECTION">
            <xsd:annotation>
              <xsd:documentation>
                Invalid selection of fields.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="INVALID_PREDICATE_VALUE">
            <xsd:annotation>
              <xsd:documentation>
                The predicate value is not valid.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNKNOWN_ERROR">
            <xsd:annotation>
              <xsd:documentation>
                &lt;span class="constraint Rejected"&gt;Used for return value only. An enumeration could not be processed, typically due to incompatibility with your WSDL version.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SizeLimitError.Reason">
        <xsd:annotation>
          <xsd:documentation>
            The reasons for Ad Scheduling errors.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="REQUEST_SIZE_LIMIT_EXCEEDED">
            <xsd:annotation>
              <xsd:documentation>
                The number of entries in the request exceeds the system limit.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="RESPONSE_SIZE_LIMIT_EXCEEDED">
            <xsd:annotation>
              <xsd:documentation>
                The number of entries in the response exceeds the system limit.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UNKNOWN">
            <xsd:annotation>
              <xsd:documentation>
                &lt;span class="constraint Rejected"&gt;Used for return value only. An enumeration could not be processed, typically due to incompatibility with your WSDL version.&lt;/span&gt;
              </xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="SortOrder">
        <xsd:annotation>
          <xsd:documentation>
            Possible orders of sorting.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ASCENDING" />
          <xsd:enumeration value="DESCENDING" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="get">
        <xsd:annotation>
          <xsd:documentation>
            Returns the list of report definitions that meet the selector criteria.
            @param selector Determines which report definitions to return. If empty,
            all report definitions will be returned.
            @return A list of report definitions.
            @throws ApiException if problems occurred while fetching report definitions
            information.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="selector" type="tns:ReportDefinitionSelector">
              <xsd:annotation>
                <xsd:documentation>
                  &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="rval" type="tns:ReportDefinitionPage" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ApiExceptionFault" type="tns:ApiException">
        <xsd:annotation>
          <xsd:documentation>
            A fault element of type ApiException.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="getReportFields">
        <xsd:annotation>
          <xsd:documentation>
            Returns the available report fields for a given report type.
            
            @param reportType The type of report.
            @return The list of available report fields. Each
            {@link ReportDefinitionField} encapsulates the field name, the
            field data type, and the enum values (if the field's type is
            {@code enum}).
            @throws ApiException if a problem occurred while fetching the
            ReportDefinitionField information.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="reportType" type="tns:ReportDefinition.ReportType">
              <xsd:annotation>
                <xsd:documentation>
                  &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getReportFieldsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="unbounded" name="rval" type="tns:ReportDefinitionField" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="mutate">
        <xsd:annotation>
          <xsd:documentation>
            Creates, updates, and deletes report definitions.
            
            @param operations A list of unique operations. The same report definition
            cannot be specified in more than one operation.
            @return The list of updated report definitions, returned in the same
            order as the &lt;code&gt;operations&lt;/code&gt; array.
            @throws ApiException if an error occurred while updating report definitions
            information.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="unbounded" name="operations" type="tns:ReportDefinitionOperation">
              <xsd:annotation>
                <xsd:documentation>
                  &lt;span class="constraint ContentsNotNull"&gt;This field must not contain {@code null} elements.&lt;/span&gt;
                  &lt;span class="constraint DistinctIds"&gt;Elements in this field must have distinct IDs for following {@link Operator}s : SET, REMOVE.&lt;/span&gt;
                  &lt;span class="constraint NotEmpty"&gt;This field must contain at least one element.&lt;/span&gt;
                  &lt;span class="constraint Required"&gt;This field is required and should not be {@code null}.&lt;/span&gt;
                  &lt;span class="constraint SupportedOperators"&gt;The following {@link Operator}s are supported: ADD, SET, REMOVE.&lt;/span&gt;
                </xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="mutateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="unbounded" name="rval" type="tns:ReportDefinition" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="RequestHeader" type="tns:SoapHeader" />
      <xsd:element name="ResponseHeader" type="tns:SoapResponseHeader" />
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="RequestHeader">
    <wsdl:part name="RequestHeader" element="tns:RequestHeader" />
  </wsdl:message>
  <wsdl:message name="ResponseHeader">
    <wsdl:part name="ResponseHeader" element="tns:ResponseHeader" />
  </wsdl:message>
  <wsdl:message name="getRequest">
    <wsdl:part name="parameters" element="tns:get" />
  </wsdl:message>
  <wsdl:message name="getResponse">
    <wsdl:part name="parameters" element="tns:getResponse" />
  </wsdl:message>
  <wsdl:message name="ApiException">
    <wsdl:part name="ApiException" element="tns:ApiExceptionFault" />
  </wsdl:message>
  <wsdl:message name="getReportFieldsRequest">
    <wsdl:part name="parameters" element="tns:getReportFields" />
  </wsdl:message>
  <wsdl:message name="getReportFieldsResponse">
    <wsdl:part name="parameters" element="tns:getReportFieldsResponse" />
  </wsdl:message>
  <wsdl:message name="mutateRequest">
    <wsdl:part name="parameters" element="tns:mutate" />
  </wsdl:message>
  <wsdl:message name="mutateResponse">
    <wsdl:part name="parameters" element="tns:mutateResponse" />
  </wsdl:message>
  <wsdl:portType name="ReportDefinitionServiceInterface">
    <wsdl:documentation>
      &lt;p&gt;Use this service to create, update, and remove report definitions. A
      report definition describes the
      {@linkplain ReportDefinition#reportType report type}, the
      {@linkplain ReportDefinition#dateRangeType date range}, and
      {@linkplain Selector fields to include in the report}. Additionally, you can
      specify {@linkplain Predicate predicates} to filter which rows are returned
      in a generated report. Please note that sorting and paging are not supported for report
      downloads.&lt;/p&gt;
      
      &lt;p&gt;To find out which report fields are available based on report
      type, see the &lt;a href="/apis/adwords/docs/appendix/reports.html"&gt;Report
      Types&lt;/a&gt; appendix or call {@link #getReportFields}.&lt;/p&gt;
      
      &lt;p&gt;For more information about retrieving reports, see
      &lt;a href="/apis/adwords/docs/reportingtopics.html"&gt;Reporting Topics&lt;/a&gt;.
    </wsdl:documentation>
    <wsdl:operation name="get">
      <wsdl:documentation>
        Returns the list of report definitions that meet the selector criteria.
        @param selector Determines which report definitions to return. If empty,
        all report definitions will be returned.
        @return A list of report definitions.
        @throws ApiException if problems occurred while fetching report definitions
        information.
      </wsdl:documentation>
      <wsdl:input name="getRequest" message="tns:getRequest" />
      <wsdl:output name="getResponse" message="tns:getResponse" />
      <wsdl:fault name="ApiException" message="tns:ApiException" />
    </wsdl:operation>
    <wsdl:operation name="getReportFields">
      <wsdl:documentation>
        Returns the available report fields for a given report type.
        
        @param reportType The type of report.
        @return The list of available report fields. Each
        {@link ReportDefinitionField} encapsulates the field name, the
        field data type, and the enum values (if the field's type is
        {@code enum}).
        @throws ApiException if a problem occurred while fetching the
        ReportDefinitionField information.
      </wsdl:documentation>
      <wsdl:input name="getReportFieldsRequest" message="tns:getReportFieldsRequest" />
      <wsdl:output name="getReportFieldsResponse" message="tns:getReportFieldsResponse" />
      <wsdl:fault name="ApiException" message="tns:ApiException" />
    </wsdl:operation>
    <wsdl:operation name="mutate">
      <wsdl:documentation>
        Creates, updates, and deletes report definitions.
        
        @param operations A list of unique operations. The same report definition
        cannot be specified in more than one operation.
        @return The list of updated report definitions, returned in the same
        order as the &lt;code&gt;operations&lt;/code&gt; array.
        @throws ApiException if an error occurred while updating report definitions
        information.
      </wsdl:documentation>
      <wsdl:input name="mutateRequest" message="tns:mutateRequest" />
      <wsdl:output name="mutateResponse" message="tns:mutateResponse" />
      <wsdl:fault name="ApiException" message="tns:ApiException" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ReportDefinitionServiceSoapBinding" type="tns:ReportDefinitionServiceInterface">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="get">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getRequest">
        <wsdlsoap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getResponse">
        <wsdlsoap:header message="tns:ResponseHeader" part="ResponseHeader" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault use="literal" name="ApiException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReportFields">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getReportFieldsRequest">
        <wsdlsoap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getReportFieldsResponse">
        <wsdlsoap:header message="tns:ResponseHeader" part="ResponseHeader" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault use="literal" name="ApiException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="mutate">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="mutateRequest">
        <wsdlsoap:header message="tns:RequestHeader" part="RequestHeader" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="mutateResponse">
        <wsdlsoap:header message="tns:ResponseHeader" part="ResponseHeader" use="literal" />
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="ApiException">
        <wsdlsoap:fault use="literal" name="ApiException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ReportDefinitionService">
    <wsdl:port name="ReportDefinitionServiceInterfacePort" binding="tns:ReportDefinitionServiceSoapBinding">
      <wsdlsoap:address location="https://adwords.google.com/api/adwords/cm/v201101/ReportDefinitionService" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>