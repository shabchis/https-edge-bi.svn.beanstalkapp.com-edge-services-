<?xml version="1.0" encoding="utf-8" ?>
<!--<ImportMappings>
	<Object Type="SegmentMetricsUnit">
		<Map To="Segments[Segment:Tracker].Value" Field="@ID"/>

		<Map To="MeasureValues[Measure:GreatToolbars]" Field="@GreatToolbars"/>
		<Map To="MeasureValues[Measure:GoodToolbars]" Field="@GoodToolbars"/>
		<Map To="MeasureValues[Measure:TotalInstalls]" Field="@TotalInstalls"/>
		<Map To="MeasureValues[Measure:Signups]" Field="@Signups"/>
		<Map To="MeasureValues[Measure:GreatToolbars]" Field="@GreatToolbars"/>
	</Object>
</ImportMappings>				
		
					
			MappingConfiguration
			{
				Objects: // this is a dictionary
				{
					// dictionary key: dictionary value
					typeof(SegmentMetricsUnit): MappedObject 
					{
						TargetType: typeof(SegmentMetricsUnit),
						Mappings:
						[
							Map
							{
								Parent: null,
								TargetMember: typeof(SegmentMetricsUnit).GetMember("Segments"),
								TargetMemberType: typeof(Dictionary<Segment,SegmentValue>),
								CollectionKey: you need to put here session.Segments["Tracker"],
								NewObjectType: typeof(SegmentValue),
								SubMaps:
								[
									Map
									{
										Parent: ^^ the one up here ^^,
										TargetMember: typeof(SegmentValue).GetMember("Value"),
										TargetMemberType: typeof(String),
										CollectionKey: null,
										NewObjectType: typeof(String),
										SubMaps: [], // empty array
										ReadSources: vv the same as the one down there vv
									}
								],
								ReadSources:
								[
									ReadSource:
									{
										Name: "@ID",
										Field: "@ID",
										Regex: null
									}
								]
							}
						]
					}
				}
			}-->
					
					
			
			